<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.11">
  <POU Name="FB_RecipeAnalogControlInputSequencer" Id="{baa4a425-4968-4360-81b7-f83562b782ba}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_RecipeAnalogControlInputSequencer
VAR_INPUT
	rampTime: UINT;
END_VAR
VAR_IN_OUT
	rRecipe: ARRAY[1..(GVL_CONSTANT.NumAnalogController)] OF REAL;
END_VAR
VAR
	i: INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[FOR i:= 1 TO E_aAnalogInputIO_Index.E_PV_EPC_04 DO
	GVL_IO.aController[i].input.restart := TRUE;
	GVL_IO.aController[i].input.rampTime := rampTime; 
	GVL_IO.aController[i].input.targetValue := rRecipe[i] / GVL_IO.aMaxValueController[i] * GVL_CONSTANT.EL3064MaxValueH;;
END_FOR

GVL_IO.aController[E_aAnalogInputIO_Index.E_PV_Susceptor_Temp].input.restart := TRUE;
GVL_IO.aController[E_aAnalogInputIO_Index.E_PV_Susceptor_Temp].input.rampTime := rampTime;
GVL_IO.aController[E_aAnalogInputIO_Index.E_PV_Susceptor_Temp].input.targetValue := rRecipe[E_aAnalogInputIO_Index.E_PV_Susceptor_Temp];
GVL_IO.aController[E_aAnalogInputIO_Index.E_PV_Reactor_Pressure].input.restart := TRUE;
GVL_IO.aController[E_aAnalogInputIO_Index.E_PV_Reactor_Pressure].input.rampTime := rampTime;
GVL_IO.aController[E_aAnalogInputIO_Index.E_PV_Reactor_Pressure].input.targetValue := rRecipe[E_aAnalogInputIO_Index.E_PV_Reactor_Pressure];
GVL_IO.aController[E_aAnalogInputIO_Index.E_PV_susceptorRotation].input.restart := TRUE;
GVL_IO.aController[E_aAnalogInputIO_Index.E_PV_susceptorRotation].input.rampTime := rampTime;
GVL_IO.aController[E_aAnalogInputIO_Index.E_PV_susceptorRotation].input.targetValue := rRecipe[E_aAnalogInputIO_Index.E_PV_susceptorRotation];]]></ST>
    </Implementation>
    <LineIds Name="FB_RecipeAnalogControlInputSequencer">
      <LineId Id="1" Count="14" />
    </LineIds>
  </POU>
</TcPlcObject>