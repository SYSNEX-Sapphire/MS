<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="P12_IQ_PLUS" Id="{e511b755-5d71-4ab9-9c97-639ef910a29b}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P12_IQ_PLUS
VAR
	wControlValue 		: WORD := 760;//Pressure Set Value
	wCDG1_PV 			: WORD; //CD2 Current Pressure
	wCDG2_PV 			: WORD; //CD2 Current Pressure
	bVacuumPumpCB		: BOOL;
	bThrottleValveCP	: BOOL;

	//nInputStatus
	ingPressureControl 		: BOOL;
	ingPositionControl 		: BOOL;
	isValveOpen 			: BOOL;
	isValveNotInitialized 	: BOOL;	
	isValveClosed 			: BOOL;
	isValveFaultState 		: BOOL;
	ingValveInitializing 	: BOOL;
	ingHoldState 			: BOOL;
	
	// Vacuum Pump Status
	isPumpFault				: BOOL;
	isPumpWarning			: BOOL;
	isPumpAlarm				: BOOL;
	isFBRunning				: BOOL;
 	isPumpRunning			: BOOL;
	//wSetPoint 			: WORD; //Set Point
	nTValveMode 		: USINT := 0; //Valve Mode
	bPumpOn				: BOOL;
	bPumpReset			: BOOL;	//Input from IQ-PLUS Throttle Valve
	
//	nInputStatus AT %I* : USINT; //Input Status Bytes
//	aInputPressurePV_CDG1 AT %I* : ARRAY[1..2]OF USINT; //CDG1 Pressure
//	aInputPressurePV_CDG2 AT %I* : ARRAY[1..2]OF USINT; //CDG2 Pressure
//	aInputPressureSP AT %I* : ARRAY[1..2]OF USINT; //Set Point Pressure
//	aInputValvePosionPV AT %I* : ARRAY[1..2]OF USINT; //Current Valve Position
	
	wTypedControlValue 	: WORD;
	wOutputSVBytes : outWord; //Word to Byte variable
	nSetType 			: USINT; //1:Pressure Conrol, 2:Position Control
	
	//Output to IQ-PLUS Throttle Valve
//	nOutputMode AT %Q* : USINT;
//	aOutputSVBytes AT %Q* : ARRAY[1..2]OF USINT; //Set Pressure
//	nOutputSetType AT %Q* : USINT; //1:Pressure Control, 2:Valve Position Control

	wByteCDG1_PV 			: WORD; //CDG1 Current Pressure, Not Used
	wByteCDG2_PV 			: WORD; //CDG2 Current Pressure
	wByteValvePosition_PV : WORD; //Current Valve Position (0~100%)
	nInputStatusOld : USINT := 9; //Value Change Monitoring, First Temp value
END_VAR

VAR CONSTANT
	//Conversion Parameter
	SetPointFactor : REAL := 327.67; //Range 0~7FFFh
	PressureFactor : REAL := 24.576;	//Range 0~6000h
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//Model : IQ Plus 
//Pressure Range : 0 ~ 1,000 Torr
IF GVL_COMMAND_FROM_UI.CMD_THROTTLE_PRESSURE_POSITION_MODE THEN // Pressure Mode Setting
	GVL_DEVICE_NET_IQ_PLUS.nOutputSetType := 1; // Pressure Control
ELSE
	GVL_DEVICE_NET_IQ_PLUS.nOutputSetType := 2; // Position Control
END_IF

_DIgitalInput();
_CalData();
_DigitalOutput();]]></ST>
    </Implementation>
    <Action Name="_CalData" Id="{217fbe83-a237-4fef-960a-68490e85a19a}">
      <Implementation>
        <ST><![CDATA[// nOutputMode
// 0 : uses setpoint and setpoint type to control the valve.
// 1 : Does not use setpoint and setpoint type to operate the valve.
// 2 : Does not use setpoint and setpoint type to operate the valve.
// 3 : Holds valve in current position.
// 4 : Reset the controller.

GVL_IO.nIQPLUS_SetType 	:= GVL_DEVICE_NET_IQ_PLUS.nOutputSetType;
GVL_IO.nIQPLUS_Mode 	:= GVL_DEVICE_NET_IQ_PLUS.nOutputMode;

GVL_IO.aMonitoring_PV[E_Morning_Index.E_Morning_TV_Position] := wByteValvePosition_PV/SetPointFactor;


(* Read from Device Value *)
// 2USINT to WORD
wByteCDG1_PV 		:= USINT_TO_WORD_jh(GVL_DEVICE_NET_IQ_PLUS.aInputPressurePV_CDG1);
wByteCDG2_PV 		:= USINT_TO_WORD_jh(GVL_DEVICE_NET_IQ_PLUS.aInputPressurePV_CDG2);
wByteValvePosition_PV:= USINT_TO_WORD_jh(GVL_DEVICE_NET_IQ_PLUS.aInputValvePosionPV);
wControlValue		:= GVL_IO.wIqPlus_CV;

//From IQ Plus
GVL_IO.wIqPlus_CDG1_PV 	:= REAL_TO_WORD(wByteCDG1_PV/PressureFactor);
GVL_IO.wIqPlus_CDG2_PV 	:= REAL_TO_WORD(wByteCDG2_PV/PressureFactor);

//To IQ Plus


IF GVL_DEVICE_NET_IQ_PLUS.nOutputMode = 0 AND nSetType = 1 THEN
	wTypedControlValue := REAL_TO_WORD(wControlValue * SetPointFactor * 0.1); //Pressure Control
ELSIF GVL_DEVICE_NET_IQ_PLUS.nOutputMode = 0 AND nSetType = 2 THEN
	wTypedControlValue := REAL_TO_WORD(wControlValue * SetPointFactor); // Position Control
END_IF

wOutputSVBytes 		:= WORD_TO_USINT_Bit(wTypedControlValue);
GVL_DEVICE_NET_IQ_PLUS.aOutputSVBytes[1] 	:= wOutputSVBytes.Lower;
GVL_DEVICE_NET_IQ_PLUS.aOutputSVBytes[2] 	:= wOutputSVBytes.Upper;

//Valve Status Initailize
IF GVL_DEVICE_NET_IQ_PLUS.nInputStatus <> nInputStatusOld THEN
	// Staus Initializing
	ingPressureControl := FALSE;
	ingPositionControl := FALSE;
	isValveOpen := FALSE;
	isValveNotInitialized := FALSE;	
	isValveClosed := FALSE;
	isValveFaultState := FALSE;
	ingValveInitializing := FALSE;
	ingHoldState := FALSE;
	// Status Update	
	nInputStatusOld := GVL_DEVICE_NET_IQ_PLUS.nInputStatus;
END_IF

//Update Valve Status
CASE GVL_DEVICE_NET_IQ_PLUS.nInputStatus OF
	0 : ingPressureControl := TRUE; //Pressure Control Performing.
	1 : ingPositionControl := TRUE; //Position Control Performing.	
	2 : isValveOpen := TRUE; //Valve Open, Stopped, Not Controlling.
	3 : isValveNotInitialized := TRUE; //Valve not initialized power on or RESET Command.
	4 : isValveClosed := TRUE; //Valve Closed, Stopped, Not Controlling.
	5 : isValveFaultState := TRUE; //Has faulted during valve initialization or operation.
	6 : ingValveInitializing := TRUE; //Initailizing Process.
	8 : ingHoldState := TRUE; //intermediate position, not at open or close and not controlling pressure.
END_CASE
]]></ST>
      </Implementation>
    </Action>
    <Action Name="_DigitalInput" Id="{73e09c08-1d98-4ed0-a3b1-c8db67cd4ed9}">
      <Implementation>
        <ST><![CDATA[
(* Command *)

bPumpOn:= GVL_COMMAND_FROM_UI.CMD_VACUUM_PUMP_ON;
bPumpReset:=GVL_COMMAND_FROM_UI.CMD_VACUUM_PUMP_RESET;
(* Read from Power Distribution Pannel *)
bVacuumPumpCB		:= GVL_IO_GAS_CABINET.DI_02_VacuumPumpELCB;
bThrottleValveCP 	:= GVL_IO_GAS_CABINET.DI_02_T_VCP;

(* Read from Vacuum Pump *)
isPumpFault			:= GVL_IO_REACTOR_CABINET.DI_02_VacuumPumpFail;
isPumpWarning		:= GVL_IO_REACTOR_CABINET.DI_02_VacuumPumpWarning;
isPumpAlarm			:= GVL_IO_REACTOR_CABINET.DI_02_VacuumPumpAlarm;
isPumpRunning		:= GVL_IO_REACTOR_CABINET.DI_02_VacuumPumpRunning;
isFBRunning			:= GVL_IO_REACTOR_CABINET.DI_02_VacuumPumpFBRunning;


GVL_IO.isPumpRunning := GVL_IO_REACTOR_CABINET.DI_02_VacuumPumpFBRunning;]]></ST>
      </Implementation>
    </Action>
    <Action Name="_DigitalOutput" Id="{dfe410ef-844e-42de-9444-2091e0770430}">
      <Implementation>
        <ST><![CDATA[//GVL_IO.aDigitalOutputIO[2].2 := bPumpOn; //Pump On
//GVL_IO.aDigitalOutputIO[2].3 := bPumpReset; // Pump Reset

GVL_IO_REACTOR_CABINET.DO_05_VacuumPumpStart_Stop := bPumpOn;
GVL_IO_REACTOR_CABINET.DO_05_VacuumPumpReset := bPumpReset;]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="P12_IQ_PLUS">
      <LineId Id="557" Count="6" />
      <LineId Id="623" Count="0" />
      <LineId Id="565" Count="1" />
      <LineId Id="401" Count="0" />
    </LineIds>
    <LineIds Name="P12_IQ_PLUS._CalData">
      <LineId Id="57" Count="8" />
      <LineId Id="96" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="2" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="5" Count="20" />
      <LineId Id="1" Count="0" />
      <LineId Id="69" Count="26" />
      <LineId Id="67" Count="0" />
    </LineIds>
    <LineIds Name="P12_IQ_PLUS._DigitalInput">
      <LineId Id="2" Count="1" />
      <LineId Id="5" Count="2" />
      <LineId Id="9" Count="0" />
      <LineId Id="13" Count="3" />
      <LineId Id="23" Count="3" />
      <LineId Id="1" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="27" Count="0" />
    </LineIds>
    <LineIds Name="P12_IQ_PLUS._DigitalOutput">
      <LineId Id="5" Count="0" />
      <LineId Id="3" Count="1" />
      <LineId Id="2" Count="0" />
      <LineId Id="1" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>